--SQL Queries Practise 

-- 1 Retrieve the names of employees who have joined the company before their managers. 85

Select  employee_name, emp_hire_date,  
   manager_name, mgr_hire_date 
from (Select t1.employee_id, t1.manager_id, (t1.first_name || ' ' || t1.last_name) employee_name, t1.hire_date emp_hire_date,  
    t2.employee_id, (t2.first_name || ' ' || t2.last_name) manager_name, t2.hire_date mgr_hire_date 
from 
employees t1  
join 
employees t2 
on 
t1.manager_id=t2.employee_id  
order by t1.employee_id)
where emp_hire_date < mgr_hire_date;

-- 2 List the employees who have changed their department more than once. 93
-- showing change in job_id designation

select * from job_history ;

SELECT employee_id 
FROM job_history 
GROUP BY employee_id 
HAVING COUNT(*) >=2;

-- 3 Find the departments with the highest average salary. 143

select e.department_id,d.department_name,avg(salary)
from employees e
    Left join 
departments d
 on e.department_id =  d.department_id 
group by e.department_id, d.department_name
order by 3 desc
FETCH NEXT 1 ROWS ONLY;

-- 4 Identify the employees who have the salary greater as their managers. 139

Select  employee_name, emp_salary,  
   manager_name, mgr_salary 
from (Select t1.employee_id, t1.manager_id, (t1.first_name || ' ' || t1.last_name) employee_name, t1.salary emp_salary,  
    t2.employee_id, (t2.first_name || ' ' || t2.last_name) manager_name, t2.salary mgr_salary 
from 
employees t1  
join 
employees t2 
on 
t1.manager_id=t2.employee_id)
where emp_salary > mgr_salary;

--5 Display the top 5 employees with the highest salary increase compared to their previous job.
--6 List the employees who have never been assigned to any project.
--7 Calculate the average salary of employees by their educational background.
--8 Identify the employees who have spent the longest time in the company without a promotion.
--9 Find the departments where the average salary is higher than the overall company average.
--10 List the employees who have had the most different job titles throughout their career.
--11 Calculate the total number of employees supervised by each manager.
--12 Retrieve the departments with the highest employee turnover rate (ratio of employees leaving to total employees).
--13 Identify the employees who have worked in multiple departments simultaneously.
--14 List the employees who have received a performance rating of 5 for three consecutive years.
--15 Calculate the average salary increase percentage for each year in the last five years.
--16 Find the employees who have worked on the most projects.
--17 Retrieve the names of employees who have worked on projects in all available departments.
--18 List the employees who have worked on the same project as their spouse.
--19 Calculate the average age of employees for each job title.
--20 Identify the employees who have the highest total overtime hours.

/* 1. Write a query to display the name (first name and last name) for those 
employees who gets more salary than the employee whose ID is 163. */


select first_name, last_name, salary 
from employees 
where salary>(select salary from employees where employee_id=163);

/* 2. Write a query to display the name (first name and last name), salary, 
department id, job id for those employees who works in the same designation as 
the employee works whose id is 169. */

select first_name, last_name, salary, department_id, job_id
from employees 
where job_id=(select job_id from employees 
where employee_id = 169)

/* 3. Write a query to display the name (first name and last name), salary, 
department id for those employees who earn such amount of salary which is the 
smallest salary of any of the departments. */

select first_name, last_name, salary, department_id
from employees 
where salary in (select min(salary) from employees 
group by department_id)


/* 4. Write a query to display the employee id, employee name (first name and 
last name) for all employees who earn more than the average salary. */

select employee_id, first_name, last_name, salary 
from employees 
where salary>(select avg(salary) from employees)

/* 5. Write a query to display the employee name (first name and last name), 
employee id and salary of all employees who report to Payam. */


select e.first_name, m.first_name
from employees e
join employees m 
on e.manager_id= m.employee_id
where m.first_name = 'Payam';

/* 6. Write a query to display the department number, name (first name and 
last name), job_id and department name for all employees in the Finance 
department. */

select e.department_id, e.first_name, e.last_name, e.job_id, d.department_name
from employees e 
left join departments d 
on e.department_id = d.department_id 
where d.department_name='Finance'


/* 7. Write a query to display all the information of an employee whose salary and 
reporting person id is 3000 and 121, respectively. */

select * from employees 
where salary = 3000 and manager_id=121;


/* 8. Display all the information of an employee whose id is any of the number 134, 159 and 183. */

select * from employees where 
employee_id in (134, 159, 183);

/* 9. Write a query to display all the information of the employees whose salary is within 
the range 1000 and 3000. */

select * from employees where 
salary between 1000 and 3000


/* 10. Write a query to display all the information of the employees whose 
salary is within the range of smallest salary and 2500. */

select * from employees 
where salary between (select min(salary) from employees) and 2500

/* 11. Write a query to display all the information of the employees who does 
not work in those departments where some employees works whose manager id 
within the range 100 and 200. */
    
select * from employees 
where department_id not in (select department_id from departments 
where manager_id between 100.0 and 200.0)

/* 12. Write a query to display all the information for those employees 
whose id is any id who earn the second highest salary. */

   
select * from employees where salary = (select distinct salary 
from employees 
order by salary desc 
offset 1 rows 
fetch next 1 rows only)

/* 13. Write a query to display the employee name (first name and last name) and 
hire date for all employees in the same department as Clara. Exclude Clara. */

select first_name, last_name, hire_date from employees 
where department_id != (Select department_id from employees where first_name = 'Clara')

/* 14. Write a query to display the employee number and name (first name and last 
name) for all employees who work in a department with any employee whose name 
contains a T. */

select employee_id, first_name, last_name from employees 
where department_id 
    in (select department_id from employees where first_name like '%T%')

/* 15. Write a query to display the employee number, name (first name and last name),
and salary for all employees who earn more than the average salary and who work 
in a department with any employee with a J in their name. */

select employee_id, first_name, last_name, salary
from employees
where salary > (select avg(salary) from employees) and 
   department_id in (select department_id from employees where first_name like '%J%')

/* 16. Display the employee name (first name and last name), employee id, and 
job title for all employees whose department location is Toronto. */

select first_name, last_name, employee_id, job_id 
from employees e
join departments d
on e.department_id=d.department_id
join locations l
on d.location_id=l.location_id
where city = 'Toronto'

/* 17. Write a query to display the employee number, name (first name and last name) and 
job title for all employees whose salary is smaller than any salary of those employees 
whose job title is MK_MAN. */


select employee_id,first_name, last_name,job_id from employees 
    where salary <(select salary 
from employees where job_id = 'MK_MAN')

/* 18. Write a query to display the employee number, name (first name and last name) and 
job title for all employees whose salary is smaller than any salary of those employees 
whose job title is MK_MAN. Exclude Job title MK_MAN. */


select employee_id,first_name, last_name,job_id from employees 
    where salary <(select salary 
from employees where job_id = 'MK_MAN') and job_id !='MK_MAN'


/* 19. Write a query to display the employee number, name (first name and last name) and job title 
for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.
Exclude job title PU_MAN. */


select employee_id, first_name, last_name, job_id from employees
where salary > (select salary from employees where job_id = 'PU_MAN') and job_id != 'PU_MAN'

/* 20. Write a query to display the employee number, name (first name and last name) and job title
for all employees whose salary is more than any average salary of any department. */

select employee_id, first_name, last_name, job_id from employees
where salary > any (select avg (salary) from employees group by department_id)

/* 21. Write a query to display the employee name( first name and last name ) and department for 
all employees for any existence of those employees whose salary is more than 3700. */

select employee_id, first_name, last_name, department_id, salary from employees
where salary in (Select salary from employees where salary > 3700) 


/* 22. Write a query to display the department id and the total salary for those departments which 
contains at least one employee. */

select department_id, sum(salary) total_salary, count(*) count from employees having count(*)>=1 group by department_id order by department_id 

/* 23. Write a query to display the employee id, name (first name and last name) and the job id column 
with a modified title SALESMAN for those employees whose job title is ST_MAN and DEVELOPER for whose 
job title is IT_PROG. */

select employee_id, first_name, last_name, 
CASE WHEN job_id='ST_MAN' THEN 'SALESMAN'
     WHEN job_id='IT_PROG' THEN 'DEVELOPER' 
     ELSE job_id END as job_id_mod
from employees;

/* 24. Write a query to display the employee id, name (first name and last name), salary and the 
SalaryStatus column with a title HIGH and LOW respectively for those employees whose salary is more 
than and less than the average salary of all employees. */

select employee_id, first_name, last_name, salary, 
CASE WHEN SALARY <= (SELECT AVG(SALARY) FROM EMPLOYEES) THEN 'LOW'
     ELSE 'HIGH'
     END as SalaryStatus 
FROM EMPLOYEES 

/* 25. Write a query to display the employee id, name (first name and last name), Salary, AvgCompare 
(salary - the average salary of all employees) and the SalaryStatus column with a title HIGH and LOW 
respectively for those employees whose salary is more than and less than the average salary of all employees.
*/




